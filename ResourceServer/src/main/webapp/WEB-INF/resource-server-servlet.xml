<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:oauth="http://www.springframework.org/schema/security/oauth2"
	xmlns:sec="http://www.springframework.org/schema/security" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans     
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd	    
	    http://www.springframework.org/schema/security/oauth2 
	    http://www.springframework.org/schema/security/spring-security-oauth2.xsd
	    http://www.springframework.org/schema/security 
	    http://www.springframework.org/schema/security/spring-security-4.0.xsd">

	<context:component-scan base-package="com.resource.controller" />

	<bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="prefix">
			<value>/WEB-INF/pages/</value>
		</property>
		<property name="suffix">
			<value>.jsp</value>
		</property>
	</bean>

	<sec:http pattern="/basicauth/**" auto-config="true"
		use-expressions="false">
		<sec:intercept-url access="ROLE_USER" pattern="/basicauth/**" />
		<sec:http-basic />
	</sec:http>

	<sec:http pattern="/oauth/**" auto-config="true">
		<sec:custom-filter before="FILTER_SECURITY_INTERCEPTOR "
			ref="oauth2AuthFilter" />
	</sec:http>

	<!-- oauth:resource-server ajoute automatiquement le filtre OAuth2AuthenticationProcessingFilter 
		avec OAuth2AuthenticationManager par defaut -->
	<oauth:resource-server id="oauth2AuthFilter"
		resource-id="springsec" token-services-ref="remoteTokenServices" />

	<!-- dans notre cas, la particularite, c'est que c'est REMOTE -->
	<bean id="remoteTokenServices"
		class="org.springframework.security.oauth2.provider.token.RemoteTokenServices">

		<!-- ********************************** -->
		<!-- C'EST ICI QU'ON METS L'AUTH SERVER, enfin l'endroit ou valider le 
			token -->
		<property name="checkTokenEndpointUrl" value="http://www.google.com/sts/oauth/check_token" />
		<!-- ********************************** -->

	</bean>


	<!-- AUTRES BEANS INTERESSANT POUR LA CONFIG DU RESOURCE-SERVER -->

	<!-- <bean id="oauthAccessDeniedHandler" -->
	<!-- class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"> -->
	<!-- </bean> -->

	<!-- <bean id="oauthAccessDeniedHandler" -->
	<!-- class="org.springframework.security.oauth2.provider.error.OAuth2AccessDeniedHandler"> -->
	<!-- </bean> -->



	<!-- FOR BASIC AUTH -->
	<sec:authentication-manager>
		<sec:authentication-provider>
			<sec:user-service>
				<sec:user name="myuser" password="myuser" authorities="ROLE_USER" />
			</sec:user-service>
		</sec:authentication-provider>
	</sec:authentication-manager>

</beans>